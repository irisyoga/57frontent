
const heading = document.getElementById("heading");
const shipTitle = document.getElementById("ship-title");

// fetch вернул Promise<Response> 
fetch("https://irisyoga.github.io/pirate-api/jack-sparrow.json") // Promise<Response>
  .then((res) => res.json()) //Раскрываем Response с помощью метода json()-> возвращает объект Promise<Pirate>
  .then((pirate) => { //раскрываем json() возвращает сам объект Pirate
    console.log(pirate.age);
    heading.textContent = pirate.name;
    shipTitle.textContent += pirate.ship.title;
  })
  .catch((e) => {
    console.log(e);
  });

  //Если хотим что-то получить метод будет называться GET
  //Если хотим что-то отправить, создать  метод будет называться POST

  //HTTP - протокол клиент-серверного взаимодействия, который используется для передачи данных между клиентом (обычно веб-браузером) и сервером (веб-сервером).
  //200 OK - запрос выполнен успешно
  //404 Not Found - запрашиваемый ресурс не найден
  //500 Internal Server Error - внутренняя ошибка сервера

  //200-299 - успешные ответы
  //300-399 - перенаправления
  //400-499 - ошибки клиента
  //500-599 - ошибки сервера

  //400 Bad Request - некорректный запрос
  //401 Unauthorized - неавторизованный доступ
  //403 Forbidden - доступ запрещен
  //404 not found
  //301 Moved Permanently - ресурс был перемещен на другой URL
  //302 Found - ресурс временно перемещен на другой URL
  //304 Not Modified - ресурс не был изменен с момента последнего запроса
  //503 Service Unavailable - сервис временно недоступен
  //502 Bad Gateway - ошибка шлюза, сервер получил недействительный ответ от вышестоящего сервера
  //408 Request Timeout - время ожидания запроса истекло
  //429 Too Many Requests - слишком много запросов, превышен лимит
  //201 Created - ресурс успешно создан
  //204 No Content - запрос выполнен успешно, но нет содержимого для возврата
  //304 Not Modified - ресурс не был изменен с момента последнего запроса
  //400 Bad Request - некорректный запрос, сервер не может его обработать
  //401 Unauthorized - неавторизованный доступ, требуется аутентификация
  //403 Forbidden - доступ запрещен, сервер понимает запрос, но отказывается его выполнять
  //405 Method Not Allowed - метод запроса не поддерживается для данного ресурса
  //406 Not Acceptable - сервер не может предоставить ответ, соответствующий заголовкам Accept в запросе
  //408 Request Timeout - сервер не получил полный запрос в течение установленного времени ожидания
  //409 Conflict - запрос не может быть выполнен из-за конфликта с текущим состоянием ресурса
  //410 Gone - ресурс был удален и больше не доступен
  //411 Length Required - сервер требует заголовок Content-Length в запросе
  //412 Precondition Failed - условие, указанное в заголовке запроса,
  //не выполнено, и сервер не может обработать запрос
  //413 Payload Too Large - размер тела запроса превышает лимит, установленный сервер
  //414 URI Too Long - запрашиваемый URI слишком длинный для обработки сервером
  //415 Unsupported Media Type - тип содержимого запроса не поддерживается сервером
  //416 Range Not Satisfiable - запрашиваемый диапазон не может быть предоставлен, так как он выходит за пределы доступных данных
  //417 Expectation Failed - сервер не может удовлетворить ожидания, указанные в заголовке Expect запроса
  //418 I'm a teapot - сервер отказывается выполнять запрос, так как он является чайником (шутливый статус-код)
  //429 Too Many Requests - клиент отправил слишком много запросов за короткий период времени, превышая лимит, установленный сервером
  //500 Internal Server Error - внутренняя ошибка сервера, сервер не может обработать запрос из-за непредвиденной ситуации


  //HTTP методы
  //GET - получить данные
  //POST - отправить данные
  //PUT - обновить данные
  //DELETE - удалить данные
  //PATCH - частичное обновление данных
  //HEAD - получить заголовки ответа
  //OPTIONS - получить информацию о поддерживаемых методах и заголовках
  //CONNECT - установить соединение с сервером
  //TRACE - получить информацию о запросе
  //LINK - установить связь между ресурсами
  //UNLINK - удалить связь между ресурсами
  //COPY - создать копию ресурса
  //LOCK - заблокировать ресурс
  //UNLOCK - разблокировать ресурс
  //PURGE - удалить кэшированный ресурс
  //SEARCH - выполнить поиск по ресурсу
  

